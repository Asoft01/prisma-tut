// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

// provider = "postgresql"
datasource db {
provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id             String          @id @default(uuid())
  age            Int
  name           String
  email          String          @unique
  // isAdmin        Boolean
  role           Role            @default(BASIC)
  largeNumber    BigInt
  preferences    Json
  // blob Bytes
  writtenPosts   Post[]          @relation("WrittentPosts")
  favouritePosts Post[]          @relation("FavouritePosts")
  userPreference UserPreference?
  // index is for sorting and performance

  @@unique([age, name])
  @@index([email])
}

model UserPreference {
  id           String  @id @default(uuid())
  emailUpdates Boolean
  user         User    @relation(fields: [userId], references: [id])
  userId       String  @unique
}

model Post {
  id            String     @id @default(uuid())
  title         String
  averageRating Float
  createdAt     DateTime   @default(now())
  updatedAt     DateTime   @updatedAt
  author        User       @relation("WrittentPosts", fields: [authorId], references: [id])
  authorId      String
  favouritedBy  User?      @relation("FavouritePosts", fields: [favoritedById], references: [id])
  favoritedById String?
  categories    Category[]

  // @@id([title, authorId])
}

model Category {
  id    String @id @default(uuid())
  name  String
  posts Post[]
}

model Product {
  id String @id @default(cuid())
  name String
  description String
  price Int 
  
}

enum Role {
  BASIC
  ADMIN
}
